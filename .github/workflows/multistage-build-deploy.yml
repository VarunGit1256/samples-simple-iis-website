name: Build and Deploy IIS Application

on:
  push:
    branches:
      - main  # Or the branch you want to trigger the workflow on

jobs:
  build:
    runs-on: windows-latest  # Use a Windows runner to build and deploy IIS applications

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.4.2

      - name: Install BatchBuilder.Web dependencies
        run: npm install
        working-directory: CaseWorthy.BatchBuilder.Web/ClientApp

      - name: Install CommHub.Web dependencies
        run: npm install
        working-directory: CaseWorthy.CommHub.Web/ClientApp

      - name: Install CommLink.Web dependencies
        run: npm install
        working-directory: CaseWorthy.CommLink.Web/ClientApp

      - name: Install Angular CLI
        run: npm install -g @angular/cli@10.0.5

      - name: Use NuGet 5.x
        run: nuget install

      - name: NuGet restore
        run: nuget restore $(Parameters.solution)

      - name: Change AssemblyFileVersion
        run: |
          echo ##vso[task.setvariable variable=BUILD_NUMBER;]$(Build.BuildNumber)
          powershell -File .\SharedAssemblyInfo.ps1

      - name: Change AssemblyVersion
        run: powershell -File .\SharedAssemblyInfo.ps1

      - name: Build solution
        run: msbuild $(Parameters.solution) /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\" /p:PrecompileBeforePublish=true /p:WDPMergeOption="CreateSeparateAssembly" /p:UseMerge=false /p:UseFixedNames=true /p:Platform=$(BuildPlatform) /p:Configuration=$(BuildConfiguration) /p:Clean=true /p:MSBuildArchitecture=x64

      - name: Copy ClientBin
        run: |
          robocopy $(Build.SourcesDirectory)\DLLS\ClientBin $(Build.StagingDirectory)\CaseWorthy\ClientBin

      - name: Copy Changes In Build
        run: |
          robocopy $(Build.SourcesDirectory)\ChangesinBuild $(Build.SourcesDirectory)\Build\ChangesinBuild

      - name: Zip BatchBuilder
        run: Compress-Archive -Path $(Build.SourcesDirectory)\CaseWorthy.BatchBuilder.Web\obj\Release\net6.0\PubTmp\Out\ClientApp\dist -DestinationPath $(Build.ArtifactStagingDirectory)\BatchBuilder.zip

      - name: Zip CommHub
        run: Compress-Archive -Path $(Build.SourcesDirectory)\CaseWorthy.CommHub.Web\obj\Release\net6.0\PubTmp\Out\ClientApp\dist -DestinationPath $(Build.ArtifactStagingDirectory)\CommHub.zip

      - name: Zip CommLink
        run: Compress-Archive -Path $(Build.SourcesDirectory)\CaseWorthy.CommLink.Web\obj\Release\net6.0\PubTmp\Out\ClientApp\dist -DestinationPath $(Build.ArtifactStagingDirectory)\CommLink.zip

      - name: Zip Build Scripts
        run: Compress-Archive -Path $(Build.SourcesDirectory)\ChangesinBuild -DestinationPath $(Build.ArtifactStagingDirectory)\BuildScripts.zip

      - name: Publish symbols path
        run: |
          $searchPattern = Get-ChildItem -Path $(Build.SourcesDirectory) -Recurse -Filter *.pdb
          Copy-Item -Path $searchPattern -Destination $(Build.ArtifactStagingDirectory) -Recurse

      - name: Publish Artifact
        run: |
          $artifactName = $env:Parameters_ArtifactName
          $pathToPublish = $env:BUILD_ARTIFACTSTAGINGDIRECTORY
          echo "##vso[task.uploadfile]$(Build.ArtifactStagingDirectory)\$artifactName"

